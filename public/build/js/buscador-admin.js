let diaSeleccionadoEl=null,cita={};document.addEventListener("DOMContentLoaded",()=>{iniciarApp()});const contenedor=document.getElementById("citas-admin");function iniciarApp(){buscarPorFecha(),inicializarCalendarioAdmin()}function buscarPorFecha(){const e=document.querySelector("#fecha");e&&e.addEventListener("input",function(e){const t=e.target.value;window.location=`?fecha=${t}`})}function inicializarCalendarioAdmin(){const e=document.getElementById("calendario");if(!e)return;const t=new FullCalendar.Calendar(e,{initialView:"dayGridMonth",locale:"es",firstDay:1,selectable:!0,editable:!1,timeZone:"local",headerToolbar:{left:"title",center:"",right:"prev,next"},dateClick:async function(e){diaSeleccionadoEl&&diaSeleccionadoEl.classList.remove("fecha-seleccionada"),diaSeleccionadoEl=e.dayEl,diaSeleccionadoEl.classList.add("fecha-seleccionada");const t=ymdLocal(e.date),a=document.querySelector("#fecha");a&&(a.value=t),await cargarCitasAdmin(t)}});t.render();const a=document.querySelector("#fecha"),n=a?.value||ymdLocal(new Date),o=e.querySelector(`[data-date="${n}"]`);o&&(o.classList.add("fecha-seleccionada"),diaSeleccionadoEl=o),cargarCitasAdmin(n)}function ymdLocal(e){return`${e.getFullYear()}-${String(e.getMonth()+1).padStart(2,"0")}-${String(e.getDate()).padStart(2,"0")}`}async function cargarCitasAdmin(e){try{const t=document.querySelector('input[name="csrf_token"]').value,a=await fetch(`/api/admin/citas?fecha=${e}&csrf_token=${t}`);if(!a.ok)throw new Error("Error al obtener citas");const n=await a.json(),o=document.getElementById("citas-admin");if(o.innerHTML="",0===n.length)return void(o.innerHTML="<h3>No hay citas en esta fecha</h3>");const r=document.createElement("ul");r.classList.add("citas");let i=null,c=null,s=0;n.forEach((a,o)=>{a.id!==i&&(c&&(c.querySelector(".total span").textContent=`$ ${s}`),c=document.createElement("li"),c.dataset.citaId=a.id,c.innerHTML=`\n                    <p>ID: <span>${a.id}</span></p>\n                    <p>Hora: <span>${a.hora.substring(0,5)}</span></p>\n                    <p>Cliente: <span>${a.cliente||"---"}</span></p>\n                    <p>Email: <span>${a.email||"---"}</span></p>\n                    <p>Teléfono: <span>${a.telefono||"---"}</span></p>\n                    <p>Barbero: <span>${a.barbero}</span></p>\n                    <h3>Servicios</h3>\n                    <div class="servicios"></div>\n                    <p class="total">Total: <span>$ 0</span></p>\n                    <div class="acciones servicios">\n                        <form action="/api/eliminar" method="POST">\n                            <input type="hidden" name="id" value="${a.id}">\n                            <input type="hidden" name="csrf_token" value="${t}">\n                            <input type="submit" class="boton-eliminar" value="Eliminar">\n                        </form>\n                        <button class="btn-actualizar-hora boton" \n                            data-cita-id="${a.id}" \n                            data-barbero-id="${a.barberoID}" \n                            data-fecha="${e}">Cambiar Hora</button>\n                    </div>\n                    <div class="horarios-grid"></div>\n                `,r.appendChild(c),i=a.id,s=0);c.querySelector(".servicios").innerHTML+=`<p>${a.servicio}: <span>$${a.precio}</span></p>`,s+=Number(a.precio),o===n.length-1&&(c.querySelector(".total span").textContent=`$ ${s}`)}),o.appendChild(r),generarResumenBarberos(n,o)}catch(e){console.error(e)}}function generarResumenBarberos(e,t){const a={};let n=0,o=0;e.forEach(e=>{a[e.barbero]||(a[e.barbero]={cantidad:0,total:0}),a[e.barbero].cantidad+=1,a[e.barbero].total+=Number(e.precio),n+=Number(e.precio),o++});const r=document.createElement("div");r.classList.add("resumen-barberos"),r.innerHTML="<h3>Resumen</h3>";for(const[e,t]of Object.entries(a))r.innerHTML+=`\n            <p>${e}: <span>${t.cantidad} cortes</span> - Total: <span>$${t.total}</span></p>\n        `;r.innerHTML+=`\n        <hr>\n        <p><strong>Total cortes:</strong> <span>${o}</span></p>\n        <p><strong>Total general:</strong> <span>$${n}</span></p>\n    `,t.appendChild(r)}async function mostrarHorariosDisponibles(e,t,a,n){try{const o=await fetch(`/api/citas?fecha=${e}&barberoID=${t}`);if(!o.ok)throw new Error("Error al obtener citas");const r=await o.json(),i=new Set(r.map(e=>e.hora?.substring(0,5)));n.innerHTML="";const c=40;generarRangoHorarios(8,40,13,20,c,i,n,e),generarRangoHorarios(15,20,19,20,c,i,n,e);const s=document.createElement("button");s.type="button",s.textContent="Guardar",s.classList.add("boton","boton-guardar"),s.addEventListener("click",async()=>{const e=n.dataset.horaSeleccionada;if(!e)return alert("Seleccione un horario primero");await actualizarHoraCita(a,e)}),n.appendChild(s)}catch(e){console.error(e)}}function generarRangoHorarios(e,t,a,n,o,r,i,c=null){let s=60*e+t;const l=60*a+n,d=new Date,u=d.toISOString().split("T")[0];for(;s<=l;){const e=Math.floor(s/60).toString().padStart(2,"0"),t=(s%60).toString().padStart(2,"0"),a=`${e}:${t}`,n=document.createElement("button");n.type="button",n.classList.add("boton-horario"),n.textContent=a,n.dataset.hora=a;let l=!1;if(c)if(c<u)l=!0;else if(c===u){60*parseInt(e)+parseInt(t)<=60*d.getHours()+d.getMinutes()&&(l=!0)}r.has(a)||l?(n.disabled=!0,n.classList.add("ocupado")):n.addEventListener("click",function(){document.querySelectorAll(".boton-horario").forEach(e=>e.classList.remove("seleccionado")),n.classList.add("seleccionado"),i.dataset.horaSeleccionada=a,void 0!==cita&&(cita.hora=a)}),i.appendChild(n),s+=o}}async function actualizarHoraCita(e,t){try{const a=document.querySelector('input[name="csrf_token"]').value,n=(await fetch("/api/citas/actualizar-hora",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({id:e,hora:t,csrf_token:a})}),document.querySelector("#fecha"));n&&await cargarCitasAdmin(n.value)}catch(e){console.error(e),alert("No se pudo actualizar la hora")}}function confirmar(e,t,a=!1,n=null){const o=document.querySelector(".alerta-global");o&&o.remove(),document.body.style.overflow="hidden";const r=document.createElement("div");r.classList.add("alerta-overlay");const i=document.createElement("div");i.classList.add("alerta-global",t);const c=document.createElement("p");if(c.textContent=e,i.appendChild(c),a&&n){const e=document.createElement("div");e.classList.add("acciones");const t=document.createElement("button");t.textContent="Confirmar",t.classList.add("boton","boton-confirmar"),t.addEventListener("click",()=>{i.remove(),r.remove(),document.body.style.overflow="",n.submit()});const a=document.createElement("button");a.textContent="Cancelar",a.classList.add("boton","boton-cancelar"),a.addEventListener("click",()=>{i.remove(),r.remove(),document.body.style.overflow=""}),e.appendChild(t),e.appendChild(a),i.appendChild(e)}r.appendChild(i),document.body.appendChild(r)}document.getElementById("scrollBtn").addEventListener("click",e=>{e.preventDefault(),document.querySelector(".resumen-barberos").scrollIntoView({behavior:"smooth",block:"start"})}),contenedor.addEventListener("click",async e=>{if(e.target.classList.contains("boton-eliminar")){e.preventDefault();confirmar("¿Seguro que deseas eliminar esta cita?","warning",!0,e.target.closest("form"))}if(e.target.classList.contains("btn-actualizar-hora")){const t=e.target,a=t.closest("li").querySelector(".horarios-grid");if(a.classList.contains("visible"))a.classList.remove("visible"),t.textContent="Cambiar Hora";else if(a.classList.add("visible"),t.textContent="Contraer",!a.hasChildNodes()){const e=t.dataset.citaId,n=t.dataset.barberoId,o=t.dataset.fecha;await mostrarHorariosDisponibles(o,n,e,a)}}});